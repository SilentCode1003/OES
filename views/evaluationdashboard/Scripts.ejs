<script>
    var employeeid = '';
    LoadParticipants()
    LoadSummary();
    LoadRankings();

    var summaryModal = document.getElementById("summaryModal");
    var questionModalSpan = document.getElementById("questionModalSpan");

    questionModalSpan.onclick = function () {
        summaryModal.style.display = "none";
    }

    window.onclick = function () {
        if (event.target == summaryModal) {
            summaryModal.style.display = "none";
        }
    }

    $('#summary-table').on('click', 'tr', function () {
        var dataRow = [];
        $(this).closest('tr').find('td').each(function () {
            dataRow.push([$(this).text()]);

        });

        supervisorid = dataRow[0];
        department = dataRow[2];

        employeeid = supervisorid;

        var summary = $('#modal-summary-table').DataTable({
            'destroy': true,
            'paging': false,
            'searching': false,
            'info': false,
            'scrollCollapse': true,
        });

        var details = $('#modal-details-table').DataTable({
            'destroy': true,
            'paging': false,
            'searching': false,
            'info': false,
            'scrollCollapse': true,
        });


        details.clear().draw();

        $.ajax({
            type: "POST",
            url: "/evaluation/getsummary",
            data: {
                supervisorid: supervisorid,
                department: department
            },
            success: function (result) {
                summary.clear().draw();
                var data = result.data;
                var index = 0;

                console.log(result.data);
                $.each(data, (key, item) => {
                    // console.log(datajson);
                    summary.row.add([item.employeeid, item.employeename, item.E, item.G, item.S, item.N, item.U, item.O,]).draw(false);

                    index += 1;
                })
            },
            error: function (result) {
                error('error: ' + result);
            }
        });

        LoadComments(employeeid);

        summaryModal.style.display = "block";
    })

    $('#modal-summary-table').on('click', 'th', function (e) {
        var grade = $(this).text();

        var summary = $('#modal-details-table').DataTable({
            'destroy': true,
            'paging': false,
            'searching': false,
            'info': false,
            'scrollCollapse': true,
        });

        $.ajax({
            type: "POST",
            url: "/evaluation/getevaluationdetails",
            data: {
                employeeid: employeeid,
                grade: grade,
            },
            success: function (result) {
                summary.clear().draw();
                var data = result.data;
                var index = 0;

                console.log(result.data);
                $.each(data, (key, item) => {
                    // console.log(datajson);
                    summary.row.add([item.criteria, item.question, item.grade, item.count]).draw(false);

                    index += 1;
                })
            },
            error: function (result) {
                error('error: ' + result);
            }
        });
    });


    function LoadRankings() {
        Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#858796';

        //overall ranking
        $.ajax({
            type: 'GET',
            url: '/evaluation/loadrankings',
            success: function (result) {
                console.log(result);
                let supervisorname = [];
                let excellentpoints = [];

                $.each(result.data, (key, item) => {
                    supervisorname.push(item.supervisorname);
                    excellentpoints.push(item.excellentpoints);
                })

                var ctx = document.getElementById("rankingBarChart");
                var myBarChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: supervisorname,
                        datasets: [{
                            label: "Excellent",
                            backgroundColor: "#ff3300",
                            hoverBackgroundColor: "#2e59d9",
                            borderColor: "#4e73df",
                            data: excellentpoints,
                        }],
                    },
                    options: {
                        maintainAspectRatio: false,
                        layout: {
                            padding: {
                                left: 10,
                                right: 25,
                                top: 25,
                                bottom: 0
                            }
                        },
                        scales: {
                            xAxes: [{
                                time: {
                                    unit: 'integer'
                                },
                                gridLines: {
                                    display: false,
                                    drawBorder: false
                                },
                                ticks: {
                                    maxTicksLimit: 10
                                },
                                maxBarThickness: 25,
                            }],
                            yAxes: [{
                                ticks: {
                                    min: 0,
                                    max: 2300,
                                    maxTicksLimit: 9,
                                    padding: 10,
                                    // Include a dollar sign in the ticks
                                    callback: function (value, index, values) {
                                        return number_format(value);
                                    }
                                },
                                gridLines: {
                                    color: "rgb(234, 236, 244)",
                                    zeroLineColor: "rgb(234, 236, 244)",
                                    drawBorder: false,
                                    borderDash: [2],
                                    zeroLineBorderDash: [2]
                                }
                            }],
                        },
                        legend: {
                            display: false
                        },
                        tooltips: {
                            titleMarginBottom: 10,
                            titleFontColor: '#6e707e',
                            titleFontSize: 14,
                            backgroundColor: "rgb(255,255,255)",
                            bodyFontColor: "#858796",
                            borderColor: '#dddfeb',
                            borderWidth: 1,
                            xPadding: 15,
                            yPadding: 15,
                            displayColors: false,
                            caretPadding: 10,
                            callbacks: {
                                label: function (tooltipItem, chart) {
                                    var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                                    return datasetLabel + ': ' + number_format(tooltipItem.yLabel);
                                }
                            }
                        },
                    }
                });
            },
            error: function (error) {
                error(error);
            }
        })
        //it ranking
        $.ajax({
            type: 'POST',
            url: '/evaluation/loaddepartmentrankings',
            data:{
                department: 'IT'
            },
            success: function (result) {
                console.log(result);
                let supervisorname = [];
                let excellentpoints = [];

                $.each(result.data, (key, item) => {
                    supervisorname.push(item.supervisorname);
                    excellentpoints.push(item.excellentpoints);
                })

                var ctx = document.getElementById("ITrankingBarChart");
                var myBarChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: supervisorname,
                        datasets: [{
                            label: "Excellent",
                            backgroundColor: "#ff3300",
                            hoverBackgroundColor: "#2e59d9",
                            borderColor: "#4e73df",
                            data: excellentpoints,
                        }],
                    },
                    options: {
                        maintainAspectRatio: false,
                        layout: {
                            padding: {
                                left: 10,
                                right: 25,
                                top: 25,
                                bottom: 0
                            }
                        },
                        scales: {
                            xAxes: [{
                                time: {
                                    unit: 'integer'
                                },
                                gridLines: {
                                    display: false,
                                    drawBorder: false
                                },
                                ticks: {
                                    maxTicksLimit: 10
                                },
                                maxBarThickness: 25,
                            }],
                            yAxes: [{
                                ticks: {
                                    min: 0,
                                    max: 2300,
                                    maxTicksLimit: 9,
                                    padding: 10,
                                    // Include a dollar sign in the ticks
                                    callback: function (value, index, values) {
                                        return number_format(value);
                                    }
                                },
                                gridLines: {
                                    color: "rgb(234, 236, 244)",
                                    zeroLineColor: "rgb(234, 236, 244)",
                                    drawBorder: false,
                                    borderDash: [2],
                                    zeroLineBorderDash: [2]
                                }
                            }],
                        },
                        legend: {
                            display: false
                        },
                        tooltips: {
                            titleMarginBottom: 10,
                            titleFontColor: '#6e707e',
                            titleFontSize: 14,
                            backgroundColor: "rgb(255,255,255)",
                            bodyFontColor: "#858796",
                            borderColor: '#dddfeb',
                            borderWidth: 1,
                            xPadding: 15,
                            yPadding: 15,
                            displayColors: false,
                            caretPadding: 10,
                            callbacks: {
                                label: function (tooltipItem, chart) {
                                    var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                                    return datasetLabel + ': ' + number_format(tooltipItem.yLabel);
                                }
                            }
                        },
                    }
                });
            },
            error: function (error) {
                error(error);
            }
        })
        //cabling ranking
        $.ajax({
            type: 'POST',
            url: '/evaluation/loaddepartmentrankings',
            data:{
                department: 'CABLING'
            },
            success: function (result) {
                console.log(result);
                let supervisorname = [];
                let excellentpoints = [];

                $.each(result.data, (key, item) => {
                    supervisorname.push(item.supervisorname);
                    excellentpoints.push(item.excellentpoints);
                })

                var ctx = document.getElementById("CablingrankingBarChart");
                var myBarChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: supervisorname,
                        datasets: [{
                            label: "Excellent",
                            backgroundColor: "#ff3300",
                            hoverBackgroundColor: "#2e59d9",
                            borderColor: "#4e73df",
                            data: excellentpoints,
                        }],
                    },
                    options: {
                        maintainAspectRatio: false,
                        layout: {
                            padding: {
                                left: 10,
                                right: 25,
                                top: 25,
                                bottom: 0
                            }
                        },
                        scales: {
                            xAxes: [{
                                time: {
                                    unit: 'integer'
                                },
                                gridLines: {
                                    display: false,
                                    drawBorder: false
                                },
                                ticks: {
                                    maxTicksLimit: 10
                                },
                                maxBarThickness: 25,
                            }],
                            yAxes: [{
                                ticks: {
                                    min: 0,
                                    max: 2300,
                                    maxTicksLimit: 9,
                                    padding: 10,
                                    // Include a dollar sign in the ticks
                                    callback: function (value, index, values) {
                                        return number_format(value);
                                    }
                                },
                                gridLines: {
                                    color: "rgb(234, 236, 244)",
                                    zeroLineColor: "rgb(234, 236, 244)",
                                    drawBorder: false,
                                    borderDash: [2],
                                    zeroLineBorderDash: [2]
                                }
                            }],
                        },
                        legend: {
                            display: false
                        },
                        tooltips: {
                            titleMarginBottom: 10,
                            titleFontColor: '#6e707e',
                            titleFontSize: 14,
                            backgroundColor: "rgb(255,255,255)",
                            bodyFontColor: "#858796",
                            borderColor: '#dddfeb',
                            borderWidth: 1,
                            xPadding: 15,
                            yPadding: 15,
                            displayColors: false,
                            caretPadding: 10,
                            callbacks: {
                                label: function (tooltipItem, chart) {
                                    var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                                    return datasetLabel + ': ' + number_format(tooltipItem.yLabel);
                                }
                            }
                        },
                    }
                });
            },
            error: function (error) {
                error(error);
            }
        })

        function number_format(number, decimals, dec_point, thousands_sep) {
            // *     example: number_format(1234.56, 2, ',', ' ');
            // *     return: '1 234,56'
            number = (number + '').replace(',', '').replace(' ', '');
            var n = !isFinite(+number) ? 0 : +number,
                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
                dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
                s = '',
                toFixedFix = function (n, prec) {
                    var k = Math.pow(10, prec);
                    return '' + Math.round(n * k) / k;
                };
            // Fix for IE parseFloat(0.55).toFixed(0) = 0;
            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
            if (s[0].length > 3) {
                s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
            }
            if ((s[1] || '').length < prec) {
                s[1] = s[1] || '';
                s[1] += new Array(prec - s[1].length + 1).join('0');
            }
            return s.join(dec);
        }
    }

    function LoadParticipants() {
        showloader();

        var table = $('#it-participants-table').DataTable({
            'destroy': true,
            'processing': true,
            'serverSide': true,
            'paging': false,
            'searching': false,
            'info': false,
            'scrollY': 400,
            'scrollCollapse': true,
            'serverMethod': 'POST',
            'ajax': {
                'type': 'POST',
                'url': '/evaluation/loadparticipants',
                'data': {
                    department: 'IT'
                }
            },
            'columnDefs': [{
                targets: 1,
                className: 'td-indent',
            }],
            'columns': [
                { data: 'allias' },
                { data: 'status' },
            ],
            initComplete: function () {
                console.log('init complete');
                hideload();
            }
        })

        showloader();
        var table2 = $('#cabling-participants-table').DataTable({
            'destroy': true,
            'processing': true,
            'serverSide': true,
            'paging': false,
            'searching': false,
            'info': false,
            'scrollY': 400,
            'scrollCollapse': true,
            'serverMethod': 'POST',
            'ajax': {
                'type': 'POST',
                'url': '/evaluation/loadparticipants',
                'data': {
                    department: 'CABLING'
                }
            },
            'columnDefs': [{
                targets: 1,
                className: 'td-indent',
            }],
            'columns': [
                { data: 'allias' },
                { data: 'status' },
            ],
            initComplete: function () {
                console.log('init complete');
                hideload();
            }
        })
    }

    function LoadSummary() {
        showloader();

        var table = $('#summary-table').DataTable({
            'destroy': true,
            'processing': true,
            'serverSide': true,
            'paging': false,
            'searching': false,
            'info': false,
            'scrollY': 400,
            'scrollCollapse': true,
            'serverMethod': 'GET',
            'ajax': {
                'url': '/evaluation/loadsummary'
            },
            'columnDefs': [{
                targets: 1,
                className: 'td-indent',
            }],
            'columns': [
                { data: 'employeeid' },
                { data: 'fullname' },
                { data: 'department' },
            ],
            initComplete: function () {
                console.log('init complete');
                hideload();
            }
        })
    }

    function LoadComments(employeeid) {
        var summary = $('#comment-table').DataTable({
            'destroy': true,
            'paging': false,
            'searching': false,
            'info': false,
            'scrollCollapse': true,
        });

        $.ajax({
            type: "POST",
            url: "/evaluation/getcomments",
            data: {
                employeeid: employeeid,
            },
            success: function (result) {
                summary.clear().draw();
                var data = result.data;
                var index = 0;

                console.log(result.data);
                $.each(data, (key, item) => {
                    // console.log(datajson);
                    summary.row.add([item.allias, item.comment]).draw(false);

                    index += 1;
                })
            },
            error: function (result) {
                error('error: ' + result);
            }
        });
    }
</script>